@page "/home"
@using System.Text.Json;
@using System.Net.Http;
@using System;
@using CountCountry.Data;

@if (ipInfoDetails == null)
{
    <p>Collecting Position Information...</p>
}
else
{
    <div>
        <h5>Details about your current location:</h5>
        <p>
            <strong>Time Zone:</strong>
            <span id="timezone">
            @countryInfoDevicePosition.timezone;
            </span>
        </p>
        <p>
            <strong>Country:</strong>
            <span id="country">
            @countryInfoDevicePosition.country, @countryInfoDevicePosition.countryCode;
            </span>
        </p>
        <p>
            <strong>State/City</strong>:
            <span id="city_region">
                @countryInfoDevicePosition.city; Code Postal: @countryInfoDevicePosition.zip
            </span>
        </p>
        <p>
            <strong>Global Position:</strong>
            <span>Lat: @countryInfoDevicePosition.lat ; Long: @countryInfoDevicePosition.lon</span>
        </p>
        <p>
            <strong>Equipement Network:</strong>
            @countryInfoDevicePosition.isp</p>
        <p> 
            <strong>IP Device: </strong>
            @countryInfoDevicePosition.query</p>
    </div>
}


@code {
    private IpApiDTO ipInfoDetails;
    public IpApiDTO countryInfoDevicePosition;

    private List<CountryEntity> listCountries = new List<CountryEntity>();


    protected override async Task OnInitializedAsync()
    {
        try
        {
            string apiUrl = "http://ip-api.com/json/";  
            /* https://freeipapi.com/api/json/ */

            using (HttpClient client = new HttpClient())
            {
                HttpResponseMessage response = await client.GetAsync(apiUrl);

                if (response.IsSuccessStatusCode)
                {
                    string apiIpAddress = await response.Content.ReadAsStringAsync();
                    if (!string.IsNullOrEmpty(apiIpAddress))
                    {
                        ipInfoDetails = JsonSerializer.Deserialize<IpApiDTO>(apiIpAddress);
                        countryInfoDevicePosition = ipInfoDetails;
                    }

                    if (ipInfoDetails.country != null)
                    {
                        CountryEntity newCountry = new();
                        newCountry.CountryName = ipInfoDetails.country;
                        var countryId = SqliteDataAccess.CheckCountryExist(newCountry);

                        if (countryId == null)
                        {
                            newCountry.CountryName = ipInfoDetails.country;
                            newCountry.CityName = ipInfoDetails.city+";"+ipInfoDetails.zip;
                            newCountry.StarDateCount = DateTime.Today;
                            newCountry.EndDateCount = DateTime.Today;
                            newCountry.InsertDate = DateTime.Now;
                            newCountry.BucketList = "0";
                            newCountry.TotalDaysStay = "1";
                            newCountry.SharedStayCount = "email";
                            //newCountry.Details = 
                            //    ipInfoDetails.countryCode + ";" + ipInfoDetails.lat + ipInfoDetails.lon+";"+ipInfoDetails.org +";" 
                            //    +ipInfoDetails.org + ";" + ipInfoDetails.timezone + ";"+ipInfoDetails.regionName;
                            SqliteDataAccess.SaveCountryRegister(newCountry);
                        }
                        else
                        {
                            //verify if is a bucketList
                            //verify if is a have someoneElse
                            //verify if is lastDate If(lastDate= yesterday) => lastDate = Today (UPDATE) // IF NOT (new entry)

                        }
                    }
                }
                else
                {
                    Console.WriteLine($"HTTP request failed with status code: {response.StatusCode}");
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }
}
